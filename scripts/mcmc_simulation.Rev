################################################################################
#
# RevBayes Script: MCMC simulation to infer phylogeny 
# 
#
# authors:  Sebastian HÃ¶hna and Luiza Fabreti
#
################################################################################
  
alignment_file_name = "data_sim_alignments/JC_" + NUM_TAXA + "_taxa_nSites_" + NUM_SITES + "_bl_" + BL_MEAN  +"/simData_" + SIM + ".nex"
tree_file_name = "data_sim_trees/JC_" + NUM_TAXA + "_taxa_nSites_" + NUM_SITES + "_bl_" + BL_MEAN + "/simTree" + SIM + ".tre"


#######################
# Reading in the Data #
#######################

# Import the character matrix #
data <- readDiscreteCharacterData( alignment_file_name )

## helpers
taxa <- data.names()
n_taxa <- taxa.size()
n_branches <- 2*n_taxa-3


# create the vectors for moves and monitors
moves    = VectorMoves()
monitors = VectorMonitors()

##############
# Tree model #
##############

# Set up branch length hyperprior with a move
#br_len_lambda ~ dnExponential(10.0)
#moves.append( mvScale(br_len_lambda, weight=4) )
br_len_lambda <- 10.0

# Define the tree parameter.
# First, we generate the topology.
# We assume a uniform prior on topology.
phylogeny ~ dnUniformTopologyBranchLength(taxa, branchLengthDistribution=dnExponential(br_len_lambda))

# compute the tree length from the phylogeny
tree_length := phylogeny.treeLength()

moves.append( mvNNI(phylogeny, weight=n_taxa) )
moves.append( mvSPR(phylogeny, weight=n_taxa/2.0) )
moves.append( mvBranchLengthScale(phylogeny, weight=n_branches) )



######################
# Substitution Model #
######################


# we call the corresponding script to set-up the model
source("scripts/model_" + SUBST_MODEL + ".Rev")

###################
# PhyloCTMC Model #
###################

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=phylogeny, Q=Q, siteRates=sr, pInv=p_inv, type="DNA")

# attach the data
seq.clamp(data)


########
# MCMC #
########

# initialize the model object #
mymodel = model(phylogeny)
# Create a vector of monitors #
# 1. for the full model #
monitors.append( mnModel(filename="output/"+SUBST_MODEL+"_nTaxa_" + NUM_TAXA + "_nSites_" + NUM_SITES + "_bl_" + BL_MEAN + "_sim_" + SIM + ".log", printgen=20) )
# 2. the tree #
monitors.append( mnFile(filename="output/"+SUBST_MODEL+"_nTaxa_" + NUM_TAXA + "_nSites_" + NUM_SITES + "_bl_" + BL_MEAN + "_sim_" + SIM + ".trees", printgen=20, phylogeny) )
# 3. and a few select parameters to be printed to the screen #
monitors.append( mnScreen(printgen=1000) )

# Initialize the MCMC object #
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

# Run the MCMC #
mymcmc.burnin(generations=NUM_BURNIN_ITERATIONS, tuningInterval=200)
mymcmc.run(generations=NUM_MCMC_ITERATIONS)
